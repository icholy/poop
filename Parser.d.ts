
export interface Tag {
  type:       "tag";
  name:       string;
  attributes: Attribute[];
  styles:     Style[];
  children:   Content[];
}

export interface Attribute {
  name:  string;
  value: string;
}

export interface Style {
  type:  "style";
  name:  string;
  value: string;
}

export interface Text {
  type:    "text";
  content: string;
}

export type Content = Tag | Text;

export interface ParseOptions {
  startRule?: string;
}

export interface SyntaxError {
  location: {
    start: {
      line:   number;
      column: number;
      offset: number;
    };
    end: {
      line:   number;
      column: number;
      offset: number;
    };
  },
  message: string;
  stack:   any;
}

/**
 * The parser code is generated by PEG.js
 */
export var SyntaxError: any;

export function parse<T>(input: string, options?: ParseOptions): T;
